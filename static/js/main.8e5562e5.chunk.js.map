{"version":3,"sources":["images/background.png","GlobalStyle.js","App/currencies.js","App/Form/styled.js","App/Form/index.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/Clock/useDateFormat.js","App/Result/styled.js","App/Result/index.js","App/Info/styled.js","App/Info/index.js","useConverter.js","useAxios.js","App.js","serviceWorker.js","index.js","theme.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","background","currencies","CAD","HKD","ISK","PHP","DKK","HUF","CZK","GBP","RON","SEK","IDR","INR","BRL","RUB","HRK","JPY","THB","CHF","EUR","MYR","BGN","TRY","CNY","NOK","NZD","ZAR","USD","MXN","SGD","AUD","ILS","KRW","PLN","Message","styled","div","theme","color","silver","Fieldset","fieldset","Legend","legend","darkcyan","Label","span","Field","input","Button","button","grannysmith","white","juniper","towergray","Line","Form","data","error","calculateResult","useState","amount","setAmount","Object","keys","currency","setCurrency","undefined","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","step","required","as","rates","map","key","Wrapper","black","Clock","date","Date","setDate","useEffect","interval","setInterval","clearInterval","useCurrentDate","toLocaleString","weekday","day","month","hour","minute","second","useDateFromat","Value","Result","result","sourceAmount","toFixed","targetAmount","Info","useConverter","setResult","setData","setError","url","handleResponse","handleError","setTimeout","axios","get","then","response","catch","useAxios","message","rate","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.8e5562e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.0720919d.png\";","import {createGlobalStyle} from \"styled-components\";\r\nimport background from \"./images/background.png\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Lato', sans-serif;\r\n    font-size: 18px;\r\n    background-image: url(\"${background}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    }\r\n\r\n    #root {\r\n        flex-basis: 600px;\r\n        margin: 20px;\r\n        text-align: center;\r\n        background-color: #fff;\r\n        padding: 10px;\r\n        border-radius: 5px;\r\n    }\r\n`;","export const currencies = {\r\n    CAD: \"Dolar kanadyjski\",\r\n    HKD: \"Dolar hongkoński\",\r\n    ISK: \"Korona islandzka\",\r\n    PHP: \"Peso filipińskie\",\r\n    DKK: \"Korona duńska\",\r\n    HUF: \"Forint węgierski\",\r\n    CZK: \"Korona czeska\",\r\n    GBP: \"Funt brytyjski\",\r\n    RON: \"Lej rumuński\",\r\n    SEK: \"Korona szwedzka\",\r\n    IDR: \"Rupia indonezyjska\",\r\n    INR: \"Rupia indyjska\",\r\n    BRL: \"Real brazylijski\",\r\n    RUB: \"Rubel rosyjski\",\r\n    HRK: \"Kuna chorwacka\",\r\n    JPY: \"Jen japoński\",\r\n    THB: \"Baht tajski\",\r\n    CHF: \"Frank szwajcarski\",\r\n    EUR: \"Euro\",\r\n    MYR: \"Ringgit malezyjski\",\r\n    BGN: \"Lew bułgarski\",\r\n    TRY: \"Lira turecka\",\r\n    CNY: \"Juan chiński\",\r\n    NOK: \"Korona norweska\",\r\n    NZD: \"Dolar nowozelandzki\",\r\n    ZAR: \"Rand południowoafrykański\",\r\n    USD: \"Dolar amerykański\",\r\n    MXN: \"Peso meksykańskie\",\r\n    SGD: \"Dolar singapurski\",\r\n    AUD: \"Dolar australijski\",\r\n    ILS: \"Nowy szekel izraelski\",\r\n    KRW: \"Won południowokoreański\",\r\n    PLN: \"Złoty polski\",\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Message = styled.div`\r\n    height: 250px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-content: center;\r\n    margin: 20px;\r\n    border-radius: 5px;\r\n    border: 2px solid ${({ theme }) => theme.color.silver};\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    margin: 20px;\r\n    border-radius: 5px;\r\n    border: 2px solid ${({ theme }) => theme.color.silver};\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    font-size: 30px;\r\n    color: ${({ theme }) => theme.color.darkcyan};\r\n`;\r\n\r\nexport const Label = styled.span`\r\n    width: 100%;\r\n    display: inline-block;\r\n    width: 250px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const Field = styled.input`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    border: 1px solid ${({ theme }) => theme.color.silver};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.color.grannysmith};\r\n    border-radius: 5px;\r\n    border: 1px solid ${({ theme }) => theme.color.silver};\r\n    color: ${({ theme }) => theme.color.white};\r\n    font-weight: bold;\r\n    letter-spacing: 5px;\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.color.juniper};\r\n    }\r\n\r\n    &:active {\r\n        background-color: ${({ theme }) => theme.color.towergray};\r\n    }\r\n`;\r\n\r\nexport const Line = styled.span`\r\n    flex: 0 0 100%;\r\n`;","import React, { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { Message, Fieldset, Legend, Label, Field, Button, Line } from \"./styled\";\r\n\r\nconst Form = ({ data, error, calculateResult }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(Object.keys(currencies)[0]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(amount, currency);\r\n    }\r\n\r\n    if (error !== undefined) {\r\n        return (\r\n            <Message>\r\n                <Line>Upsii, coś poszło nie tak 🙊</Line>\r\n                <Line>Sprawdź połączenie z internetem lub spróbuj ponownie później.</Line>\r\n                <Line>Przepraszamy za niedogodności i liczymy na wyrozumiałość! ❤</Line>\r\n            </Message>\r\n        );\r\n    }\r\n\r\n    if (data === undefined) {\r\n        return (\r\n            <Message>\r\n                Proszę czekać, ładujemy dane!\r\n            </Message>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={onFormSubmit}>\r\n                <Fieldset>\r\n                    <Legend>Przelicznik walut</Legend>\r\n                    <p>\r\n                        <label>\r\n                            <Label>Kwota w zł*</Label>\r\n                            <Field\r\n                                value={amount}\r\n                                onChange={({ target }) => setAmount(target.value)}\r\n                                placeholder=\"Wpisz kwotę w złotówkach\"\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                required\r\n                            />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <Label>Waluta</Label>\r\n                            <Field as=\"select\"\r\n                                value={currency}\r\n                                onChange={({ target }) => setCurrency(target.value)}\r\n                            >\r\n                                {Object.keys(data.rates).map((currency => (\r\n                                    <option\r\n                                        key={currency}\r\n                                        value={currency}>\r\n                                        {currencies[currency] ? currencies[currency] : currency}\r\n                                    </option>\r\n                                )))}\r\n                            </Field>\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <Button>Oblicz</Button>\r\n                    </p>\r\n                </Fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    color: ${({ theme }) => theme.color.black};\r\n    text-align: right;\r\n    font-size: 12px;\r\n    font-family: 'Roboto Mono', monospace;\r\n    margin: 20px;\r\n`;","import React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { useDateFromat } from \"./useDateFormat\";\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiaj jest {useDateFromat(date)}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n\r\n    return date;\r\n}","export const useDateFromat = (date) => {\r\n    return date.toLocaleString(\r\n        undefined,\r\n        {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\"\r\n        }\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.span`\r\n    font-size: 20px;\r\n`;\r\n\r\nexport const Value = styled.span`\r\n    color: ${({ theme }) => theme.color.darkcyan};\r\n    font-weight: bold;\r\n`;","import React from \"react\";\r\nimport { Wrapper, Value } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <p>\r\n        {!!result && (\r\n            <>\r\n                <Wrapper>\r\n                    {result.sourceAmount.toFixed(2)} PLN = {\" \"}\r\n                    <Value>\r\n                        {(+result.targetAmount).toFixed(2)} {result.currency}\r\n                    </Value>\r\n                </Wrapper>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    font-size: 10px;\r\n`;\r\n\r\nexport const Date = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Line = styled.span`\r\n    display: block;\r\n    padding: 5px;\r\n`;","import React from \"react\";\r\nimport { Wrapper, Date, Line } from \"./styled\";\r\n\r\nconst Info = ({ data }) => !!data && (\r\n    <Wrapper>\r\n        <Line>Kursy walut pobierane są z Europejskiego Banku Centralnego.</Line>\r\n        <Line>Aktualne na dzień: <Date>{data.date}</Date></Line>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Info;","import { useState } from 'react';\r\nimport { useAxios } from \"./useAxios\";\r\n\r\nexport const useConverter = () => {\r\n    const url = \"https://api.exchangeratesapi.io/latest?base=PLN\";\r\n    const [result, setResult] = useState();\r\n    const [data, setData] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const calculateResult = (amount, currency) => {\r\n        const rate = data.rates[currency];\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount * rate,\r\n            currency,\r\n        });\r\n    }\r\n\r\n    useAxios(url, setData, error => setError(error.message));\r\n\r\n    return {\r\n        result,\r\n        calculateResult,\r\n        data,\r\n        error,\r\n    }\r\n}","import axios from \"axios\";\r\nimport { useEffect } from 'react';\r\n\r\nexport const useAxios = (url, handleResponse, handleError) => {\r\n    // setTimeout only for dev purpose to be able to see load message  \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            axios.get(url)\r\n                .then(response => handleResponse(response.data))\r\n                .catch(error => handleError(error));\r\n        }, 1000)\r\n    }, []);\r\n}","import React from 'react';\nimport Form from \"./App/Form\";\nimport Clock from \"./App/Clock\";\nimport Result from \"./App/Result\";\nimport Info from \"./App/Info\";\nimport { useConverter } from './useConverter';\n\nfunction App() {\n  const { result, calculateResult, data, error } = useConverter();\n\n  return (\n    <div className=\"App\">\n      <Clock />\n      <Form\n        data={data}\n        error={error}\n        calculateResult={calculateResult}\n      />\n      <Info data={data} />\n      <Result result={result} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n    color: {\r\n        white: \"#fff\",\r\n        silver: \"#ccc\",\r\n        towergray: \"#9bb5b5\",\r\n        grannysmith: \"#7ea0a0\",\r\n        juniper: \"#648787\",\r\n        darkcyan: \"#008b8b\",\r\n        black: \"#000\",\r\n    }\r\n};"],"sourceRoot":""}